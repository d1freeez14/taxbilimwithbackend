// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —É—Ä–æ–∫–∞
// –ó–∞–ø—É—Å–∫: node test-lesson-api.js

const BACKEND_URL = 'http://localhost:5001';

async function testLessonAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É—Ä–æ–∫–∞...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...');
    const loginResponse = await fetch(`${BACKEND_URL}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'student@taxbilim.com',
        password: 'student123'
      })
    });

    if (!loginResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: ${loginResponse.status}`);
    }

    const loginData = await loginResponse.json();
    const token = loginData.token;
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', token.substring(0, 20) + '...\n');

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞ —Å ID 2...');
    const lessonResponse = await fetch(`${BACKEND_URL}/api/lessons/2`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json',
      },
      cache: 'no-store'
    });

    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', lessonResponse.status);
    console.log('Headers:', Object.fromEntries(lessonResponse.headers.entries()));

    if (!lessonResponse.ok) {
      const errorText = await lessonResponse.text();
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–∫–∞: ${lessonResponse.status} - ${errorText}`);
    }

    const lessonData = await lessonResponse.json();
    console.log('‚úÖ –£—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞:', lessonData.lesson.title);
    console.log('–¢–∏–ø —É—Ä–æ–∫–∞:', lessonData.lesson.lesson_type);
    console.log('ID —É—Ä–æ–∫–∞:', lessonData.lesson.id);

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ 401)
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ 401)...');
    const noAuthResponse = await fetch(`${BACKEND_URL}/api/lessons/2`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      }
    });

    console.log('–°—Ç–∞—Ç—É—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:', noAuthResponse.status);
    if (noAuthResponse.status === 401) {
      console.log('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    } else {
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
    const wrongTokenResponse = await fetch(`${BACKEND_URL}/api/lessons/2`, {
      method: 'GET',
      headers: {
        'Authorization': 'Bearer invalid_token',
        'Content-Type': 'application/json',
      }
    });

    console.log('–°—Ç–∞—Ç—É—Å —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º:', wrongTokenResponse.status);
    if (wrongTokenResponse.status === 401) {
      console.log('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 401 —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
    } else {
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ—Ä–∞:');
    console.log('- Backend URL:', BACKEND_URL);
    console.log('- Endpoint: GET /api/lessons/2');
    console.log('- –¢—Ä–µ–±—É–µ—Ç—Å—è: Authorization: Bearer <token>');
    console.log('- Content-Type: application/json');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testLessonAPI();
